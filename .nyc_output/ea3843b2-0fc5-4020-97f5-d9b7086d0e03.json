{"/home/usuario/ull-esit-inf-dsi-20-21-prct10-async-sockets-alu0100890174/src/Note/Note.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct10-async-sockets-alu0100890174/src/Note/Note.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"2":{"start":{"line":9,"column":0},"end":{"line":14,"column":50}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":38}},"4":{"start":{"line":11,"column":4},"end":{"line":11,"column":36}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":42}},"6":{"start":{"line":13,"column":4},"end":{"line":13,"column":40}},"7":{"start":{"line":26,"column":8},"end":{"line":26,"column":27}},"8":{"start":{"line":27,"column":8},"end":{"line":27,"column":25}},"9":{"start":{"line":28,"column":8},"end":{"line":28,"column":27}},"10":{"start":{"line":29,"column":8},"end":{"line":46,"column":9}},"11":{"start":{"line":31,"column":27},"end":{"line":31,"column":28}},"12":{"start":{"line":32,"column":16},"end":{"line":32,"column":38}},"13":{"start":{"line":33,"column":16},"end":{"line":33,"column":22}},"14":{"start":{"line":35,"column":26},"end":{"line":35,"column":27}},"15":{"start":{"line":36,"column":16},"end":{"line":36,"column":37}},"16":{"start":{"line":37,"column":16},"end":{"line":37,"column":22}},"17":{"start":{"line":39,"column":29},"end":{"line":39,"column":30}},"18":{"start":{"line":40,"column":16},"end":{"line":40,"column":40}},"19":{"start":{"line":41,"column":16},"end":{"line":41,"column":22}},"20":{"start":{"line":43,"column":28},"end":{"line":43,"column":29}},"21":{"start":{"line":44,"column":16},"end":{"line":44,"column":39}},"22":{"start":{"line":45,"column":16},"end":{"line":45,"column":22}},"23":{"start":{"line":49,"column":0},"end":{"line":49,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":1},"end":{"line":9,"column":2}},"loc":{"start":{"line":9,"column":18},"end":{"line":14,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":45},"end":{"line":47,"column":5}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":11},"end":{"line":14,"column":48}},"type":"binary-expr","locations":[{"start":{"line":14,"column":11},"end":{"line":14,"column":24}},{"start":{"line":14,"column":29},"end":{"line":14,"column":47}}],"line":14},"1":{"loc":{"start":{"line":25,"column":29},"end":{"line":25,"column":43}},"type":"default-arg","locations":[{"start":{"line":25,"column":37},"end":{"line":25,"column":43}}],"line":25},"2":{"loc":{"start":{"line":29,"column":8},"end":{"line":46,"column":9}},"type":"switch","locations":[{"start":{"line":30,"column":12},"end":{"line":33,"column":22}},{"start":{"line":34,"column":12},"end":{"line":37,"column":22}},{"start":{"line":38,"column":12},"end":{"line":41,"column":22}},{"start":{"line":42,"column":12},"end":{"line":45,"column":22}}],"line":29}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":9,"8":9,"9":9,"10":9,"11":3,"12":3,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":4,"21":4,"22":4,"23":1},"f":{"0":1,"1":9},"b":{"0":[1,1],"1":[3],"2":[3,1,1,4]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct10-async-sockets-alu0100890174/src/Note/Note.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct10-async-sockets-alu0100890174/src/Note/Note.ts"],"names":[],"mappings":";;;;AAEA;;GAEG;AACH,IAAY,KAAgC;AAA5C,WAAY,KAAK;IAAE,iCAAI,CAAA;IAAE,+BAAG,CAAA;IAAE,qCAAM,CAAA;IAAE,mCAAK,CAAA;AAAA,CAAC,EAAhC,KAAK,GAAL,aAAK,KAAL,aAAK,QAA2B;AAe5C;;;;;;;;GAQG;AACH,MAAa,IAAI;IAEb,YACW,KAAa,EACb,IAAY,EACZ,QAAgB,MAAM;QAFtB,UAAK,GAAL,KAAK,CAAQ;QACb,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAiB;QACzB,QAAQ,KAAK,EAAE;YACX,KAAK,MAAM;gBACP,IAAI,IAAI,GAAU,CAAC,CAAC;gBACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,MAAM;YACV,KAAK,KAAK;gBACN,IAAI,GAAG,GAAU,CAAC,CAAC;gBACnB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;gBACrB,MAAM;YACV,KAAK,QAAQ;gBACT,IAAI,MAAM,GAAU,CAAC,CAAC;gBACtB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;gBACxB,MAAM;YACV,KAAK,OAAO;gBACR,IAAI,KAAK,GAAU,CAAC,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,MAAM;SACb;IACT,CAAC;CACJ;AAzBD,oBAyBC","sourcesContent":["#!/usr/bin/env node\r\n\r\n/**\r\n * enumerable para colores {azul, rojo, amarillo y verde}\r\n */\r\nexport enum color {blue, red, yellow, green}\r\ntype Color = color;\r\n\r\n/**\r\n * Interfaz que debe implementar nuestra clase Note.\r\n * @param title Titulo de la nota\r\n * @param body Contenido de la nota\r\n * @param colorType Color que tendr√° la nota\r\n */\r\ninterface NoteStructure {\r\n    title: string;\r\n    body: string;\r\n    colorType: color;\r\n}\r\n\r\n/**\r\n * Class Note . Implementa la Interfaz NoteStructure; \r\n * representa una nota       \r\n * @param color String con el valor del color\r\n * @param title String con el nombre de la nota\r\n * @param body  String con el contenido de la nota\r\n * @param colorType Color Type con enumerable color\r\n *      { blue=0, red=1, yellow=2, green=3}\r\n */\r\nexport class Note implements NoteStructure {\r\n    public colorType: color;\r\n    constructor(\r\n        public title: string,\r\n        public body: string,\r\n        public color: string = 'blue') {\r\n            switch (color) {\r\n                case 'blue':\r\n                    let blue: Color = 0;\r\n                    this.colorType = blue;\r\n                    break;\r\n                case 'red':\r\n                    let red: Color = 1;\r\n                    this.colorType = red;\r\n                    break;\r\n                case 'yellow':\r\n                    let yellow: Color = 2;\r\n                    this.colorType = yellow;\r\n                    break;                \r\n                case 'green':\r\n                    let green: Color = 3;\r\n                    this.colorType = green;\r\n                    break;\r\n            }\r\n    }\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ff91686abf842cff705309ed7be7a5d38aa35509","contentHash":"d95343cd1e416055e536df587378f8b12ddc424f43afc37a48d3eb634823894c"},"/home/usuario/ull-esit-inf-dsi-20-21-prct10-async-sockets-alu0100890174/src/Note/ProcessNote.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct10-async-sockets-alu0100890174/src/Note/ProcessNote.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"2":{"start":{"line":5,"column":11},"end":{"line":5,"column":24}},"3":{"start":{"line":6,"column":14},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":32}},"5":{"start":{"line":14,"column":8},"end":{"line":14,"column":25}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":25}},"7":{"start":{"line":16,"column":8},"end":{"line":16,"column":28}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":40}},"9":{"start":{"line":23,"column":8},"end":{"line":26,"column":9}},"10":{"start":{"line":24,"column":12},"end":{"line":24,"column":25}},"11":{"start":{"line":25,"column":12},"end":{"line":25,"column":24}},"12":{"start":{"line":27,"column":8},"end":{"line":27,"column":21}},"13":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"14":{"start":{"line":34,"column":12},"end":{"line":34,"column":70}},"15":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"16":{"start":{"line":42,"column":12},"end":{"line":42,"column":67}},"17":{"start":{"line":49,"column":8},"end":{"line":49,"column":21}},"18":{"start":{"line":55,"column":8},"end":{"line":57,"column":11}},"19":{"start":{"line":56,"column":12},"end":{"line":56,"column":62}},"20":{"start":{"line":65,"column":8},"end":{"line":73,"column":9}},"21":{"start":{"line":66,"column":28},"end":{"line":66,"column":96}},"22":{"start":{"line":67,"column":12},"end":{"line":67,"column":46}},"23":{"start":{"line":68,"column":12},"end":{"line":68,"column":44}},"24":{"start":{"line":69,"column":12},"end":{"line":69,"column":46}},"25":{"start":{"line":70,"column":12},"end":{"line":70,"column":54}},"26":{"start":{"line":71,"column":26},"end":{"line":71,"column":91}},"27":{"start":{"line":72,"column":12},"end":{"line":72,"column":41}},"28":{"start":{"line":79,"column":19},"end":{"line":79,"column":44}},"29":{"start":{"line":80,"column":8},"end":{"line":80,"column":77}},"30":{"start":{"line":89,"column":8},"end":{"line":94,"column":9}},"31":{"start":{"line":90,"column":12},"end":{"line":90,"column":65}},"32":{"start":{"line":92,"column":13},"end":{"line":94,"column":9}},"33":{"start":{"line":93,"column":12},"end":{"line":93,"column":25}},"34":{"start":{"line":95,"column":8},"end":{"line":95,"column":20}},"35":{"start":{"line":104,"column":8},"end":{"line":109,"column":9}},"36":{"start":{"line":105,"column":12},"end":{"line":105,"column":25}},"37":{"start":{"line":108,"column":12},"end":{"line":108,"column":24}},"38":{"start":{"line":112,"column":0},"end":{"line":112,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":28},"end":{"line":17,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":10},"end":{"line":28,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":13},"end":{"line":36,"column":5}},"line":32},"3":{"name":"(anonymous_3)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":17},"end":{"line":44,"column":5}},"line":40},"4":{"name":"(anonymous_4)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":13},"end":{"line":50,"column":5}},"line":48},"5":{"name":"(anonymous_5)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":15},"end":{"line":58,"column":5}},"line":54},"6":{"name":"(anonymous_6)","decl":{"start":{"line":55,"column":50},"end":{"line":55,"column":51}},"loc":{"start":{"line":55,"column":61},"end":{"line":57,"column":9}},"line":55},"7":{"name":"(anonymous_7)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":22},"end":{"line":74,"column":5}},"line":64},"8":{"name":"(anonymous_8)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":12},"end":{"line":81,"column":5}},"line":78},"9":{"name":"(anonymous_9)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":27},"end":{"line":96,"column":5}},"line":88},"10":{"name":"(anonymous_10)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":27},"end":{"line":110,"column":5}},"line":103}},"branchMap":{"0":{"loc":{"start":{"line":23,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":26,"column":9}},{"start":{"line":23,"column":8},"end":{"line":26,"column":9}}],"line":23},"1":{"loc":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},{"start":{"line":33,"column":8},"end":{"line":35,"column":9}}],"line":33},"2":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{"line":41,"column":8},"end":{"line":43,"column":9}}],"line":41},"3":{"loc":{"start":{"line":65,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":73,"column":9}},{"start":{"line":65,"column":8},"end":{"line":73,"column":9}}],"line":65},"4":{"loc":{"start":{"line":89,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":94,"column":9}},{"start":{"line":89,"column":8},"end":{"line":94,"column":9}}],"line":89},"5":{"loc":{"start":{"line":89,"column":12},"end":{"line":89,"column":74}},"type":"binary-expr","locations":[{"start":{"line":89,"column":13},"end":{"line":89,"column":54}},{"start":{"line":89,"column":60},"end":{"line":89,"column":73}}],"line":89},"6":{"loc":{"start":{"line":92,"column":13},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":13},"end":{"line":94,"column":9}},{"start":{"line":92,"column":13},"end":{"line":94,"column":9}}],"line":92},"7":{"loc":{"start":{"line":104,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":109,"column":9}},{"start":{"line":104,"column":8},"end":{"line":109,"column":9}}],"line":104}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":4,"6":4,"7":4,"8":1,"9":1,"10":1,"11":1,"12":0,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":2,"21":2,"22":2,"23":2,"24":2,"25":2,"26":2,"27":2,"28":2,"29":2,"30":2,"31":1,"32":1,"33":0,"34":2,"35":4,"36":1,"37":3,"38":1},"f":{"0":4,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":2,"9":2,"10":4},"b":{"0":[1,0],"1":[1,0],"2":[1,0],"3":[2,0],"4":[1,1],"5":[2,1],"6":[0,1],"7":[1,3]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct10-async-sockets-alu0100890174/src/Note/ProcessNote.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct10-async-sockets-alu0100890174/src/Note/ProcessNote.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\r\nconst fs = require('fs');\r\nconst chalk = require('chalk');\r\nimport {Note} from './Note';\r\n\r\n/**\r\n * ProcessNote . Clase que expande Note, implementa un identificador para el usuario \r\n * de cada nota y las funcionalidades que permitir√°n al mismo crear, guardar y editarlas.\r\n */\r\nexport class ProcessNote<N extends Note> {\r\n    /**\r\n     * \r\n     * @param user Nombre del usuario propietario de la nota\r\n     * @param Note Objeto que contiene una nota {Titulo, Cuerpo y Color}\r\n     */\r\n\r\n    public ListNotes: Note[];\r\n    constructor(private user: string, private Note: N){\r\n        this.ListNotes = [];\r\n    }\r\n\r\n    /**\r\n     * Permite crear y almacenar la nota de un usuario en formato JSON.\r\n     */\r\n    add(): boolean {\r\n        this.chechUser(this.user, true);\r\n        if(this.checkNote(this.user, this.Note.title) == false) {\r\n            this.write();\r\n            return true;\r\n        }\r\n            return false; \r\n    }\r\n\r\n    /**\r\n     * Permite eliminar una nota de un usuario de la base de datos JSON.\r\n     */\r\n    remove() {\r\n        if(this.checkNote(this.user, this.Note.title) == true) {\r\n            fs.rmSync(`./Notes/${this.user}/${this.Note.title}.json`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Permite eliminar toda la informaci√≥n almacenada de un usuario de la base de datos.\r\n     */\r\n    public removeUser() {\r\n        if(this.chechUser(this.user) == true) {\r\n            fs.rmSync(`./Notes/${this.user}`, {recursive: true});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Permite modificar una nota de un usuario de la base de datos en formato JSON.\r\n     */\r\n    modify() {\r\n        this.write();\r\n    }\r\n\r\n    /**\r\n     * Permite mostrar todas las notas de un usuario.\r\n     */    \r\n    list(user: string) {\r\n        fs.readdirSync(`./Notes/${user}`).forEach((notes) => {\r\n            this.read(user, notes.slice(0, notes.length - 5));\r\n        })\r\n    }\r\n\r\n    /**\r\n     * read . Permite a un usuario leer una nota de la base de datos siempre y cuando exista.\r\n     * @param user Usuario que quiere leer una nota\r\n     * @param title T√≠tulo de la nota que desea leer\r\n     */\r\n    read(user: string, title: string) {\r\n        if(this.checkNote(user, title) == true) {\r\n            let stackNote = JSON.parse(fs.readFileSync(`./Notes/${user}/${title}.json`,'utf8'));\r\n            this.Note.title = stackNote.title;\r\n            this.Note.body = stackNote.body;\r\n            this.Note.color = stackNote.color;\r\n            this.Note.colorType = stackNote.colorType;\r\n            let newNote = new Note(stackNote.title, stackNote.body, stackNote.color);\r\n            this.ListNotes.push(newNote);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * write . Metodo privado que permite escribir una nota en la base de datos.\r\n     */\r\n    private write() {\r\n        let json = JSON.stringify(this.Note);\r\n        fs.writeFileSync(`Notes/${this.user}/${this.Note.title}.json`, json);\r\n    }\r\n\r\n    /**\r\n     *  checkUser . Comprueba si existe informaci√≥n de un usuario en la base de datos.\r\n     * @param user Usuario que se quiere comprobar\r\n     * @param crear Booleano para crear nuevo directorio en caso de no existir.\r\n     * @returns \r\n     */\r\n    private chechUser(user: string, crear?: boolean): boolean{\r\n        if((fs.existsSync(`./Notes/${user}`) == false) && (crear == true)) {\r\n            fs.mkdirSync(`./Notes/${user}`, {recursive: true});\r\n        } else if (fs.existsSync(`./Notes/${user}`) == false) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * checkNote . Comprueba si existe una nota en la base de datos.\r\n     * @param user Usuario que busca la existencia de una nota en la base de datos.\r\n     * @param title T√≠tulo de la nota que se quiere comprobar\r\n     * @returns \r\n     */\r\n    private checkNote(user: string, title: string): boolean {\r\n        if(fs.existsSync(`./Notes/${user}/${title}.json`) == false) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"616b621f6f40f295144a549f07a57abc0fcb8947","contentHash":"55b7829c7312d81cdf6f705b10b2838aa0734fcac009b97042ff285d425da1e2"}}